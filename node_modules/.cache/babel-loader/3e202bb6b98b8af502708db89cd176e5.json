{"ast":null,"code":"import { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\"; // Set the parameters\n\nconst TPAT_VIDEOS_BUCKET = \"tpatvideos\";\n\nasync function uploadTos3(videoBlob) {\n  const s3Client = gets3Client();\n\n  try {\n    const uploadParams = {\n      Bucket: TPAT_VIDEOS_BUCKET,\n      Body: videoBlob,\n      Key: Date.now() + \"Teacher1Task1Timestamp2.webm\",\n      Metadata: {\n        username: \"Teacher 1\",\n        email: \"teacher@gmail.com\",\n        task: \"1\"\n      }\n    };\n    const data = await s3Client.send(new PutObjectCommand(uploadParams));\n    console.log(\"Success\", data);\n    return data;\n  } catch (err) {\n    console.log(\"Error sfsd\", err);\n  }\n}\n\nfunction gets3Client() {\n  const client = new S3Client({\n    region: \"us-east-2\",\n    credentials: {\n      accessKeyId: \"AKIAR4AR4PW6KXERGY7I\",\n      secretAccessKey: \"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\"\n    }\n  });\n  return client;\n}\n\nexport { gets3Client, uploadTos3 };","map":{"version":3,"names":["S3Client","PutObjectCommand","TPAT_VIDEOS_BUCKET","uploadTos3","videoBlob","s3Client","gets3Client","uploadParams","Bucket","Body","Key","Date","now","Metadata","username","email","task","data","send","console","log","err","client","region","credentials","accessKeyId","secretAccessKey"],"sources":["/Users/mannysa/SAIL projects/tpat/src/utils/videoUploadUtils.js"],"sourcesContent":["import { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\n// Set the parameters\n\nconst TPAT_VIDEOS_BUCKET = \"tpatvideos\";\n\nasync function uploadTos3(videoBlob) {\n  const s3Client = gets3Client();\n  try {\n    const uploadParams = {\n      Bucket: TPAT_VIDEOS_BUCKET,\n      Body: videoBlob,\n      Key: Date.now() + \"Teacher1Task1Timestamp2.webm\",\n      Metadata: {\n        username: \"Teacher 1\",\n        email: \"teacher@gmail.com\",\n        task: \"1\",\n      },\n    };\n    const data = await s3Client.send(new PutObjectCommand(uploadParams));\n    console.log(\"Success\", data);\n    return data;\n  } catch (err) {\n    console.log(\"Error sfsd\", err);\n  }\n}\n\nfunction gets3Client() {\n  const client = new S3Client({\n    region: \"us-east-2\",\n    credentials: {\n      accessKeyId: \"AKIAR4AR4PW6KXERGY7I\",\n      secretAccessKey: \"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\",\n    },\n  });\n\n  return client;\n}\n\nexport { gets3Client, uploadTos3 };\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,gBAAnB,QAA2C,oBAA3C,C,CACA;;AAEA,MAAMC,kBAAkB,GAAG,YAA3B;;AAEA,eAAeC,UAAf,CAA0BC,SAA1B,EAAqC;EACnC,MAAMC,QAAQ,GAAGC,WAAW,EAA5B;;EACA,IAAI;IACF,MAAMC,YAAY,GAAG;MACnBC,MAAM,EAAEN,kBADW;MAEnBO,IAAI,EAAEL,SAFa;MAGnBM,GAAG,EAAEC,IAAI,CAACC,GAAL,KAAa,8BAHC;MAInBC,QAAQ,EAAE;QACRC,QAAQ,EAAE,WADF;QAERC,KAAK,EAAE,mBAFC;QAGRC,IAAI,EAAE;MAHE;IAJS,CAArB;IAUA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAT,CAAc,IAAIjB,gBAAJ,CAAqBM,YAArB,CAAd,CAAnB;IACAY,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;IACA,OAAOA,IAAP;EACD,CAdD,CAcE,OAAOI,GAAP,EAAY;IACZF,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,GAA1B;EACD;AACF;;AAED,SAASf,WAAT,GAAuB;EACrB,MAAMgB,MAAM,GAAG,IAAItB,QAAJ,CAAa;IAC1BuB,MAAM,EAAE,WADkB;IAE1BC,WAAW,EAAE;MACXC,WAAW,EAAE,sBADF;MAEXC,eAAe,EAAE;IAFN;EAFa,CAAb,CAAf;EAQA,OAAOJ,MAAP;AACD;;AAED,SAAShB,WAAT,EAAsBH,UAAtB"},"metadata":{},"sourceType":"module"}