{"ast":null,"code":"// const express = require(\"express\");\n// const AWS = require(\"aws-sdk\");\n// const s3 = new AWS.S3({\n//   region: \"us-east-2\",\n// });\n// const { v4: uuidv4 } = require(\"uuid\");\n// const cors = require(\"cors\");\n// const app = express();\n// app.use(cors());\n// app.get(\"/get-signed-url\", async (req, res) => {\n//   await s3.createPresignedPost(\n//     {\n//       Fields: {\n//         key: uuidv4(),\n//       },\n//       Conditions: [\n//         [\"starts-with\", \"$Content-Type\", \"web3/\"],\n//         [\"content-length-range\", 0, 1000000],\n//       ],\n//       Expires: 30,\n//       Bucket: \"tpat\",\n//     },\n//     (err, signed) => {\n//       res.json(signed);\n//     }\n//   );\n// });\n// app.listen(8080);\nimport { S3Client, AbortMultipartUploadCommand } from \"@aws-sdk/client-s3\"; // Set the parameters\n\nexport const uploadParams = {\n  Bucket: \"BUCKET_NAME\",\n  // Add the required 'Key' parameter using the 'path' module.\n  Key: path.basename(file),\n  // Add the required 'Body' parameter\n  Body: \"fileStream\"\n};\n\nfunction uploadVideo(videoUri) {}\n\nasync function uploadTos3() {\n  const s3Client = gets3Client();\n\n  try {\n    const data = await s3Client.send(new PutObjectCommand(uploadParams));\n    console.log(\"Success\", data);\n    return data; // For unit tests.\n  } catch (err) {\n    console.log(\"Error\", err);\n  }\n}\n\nfunction gets3Client() {\n  const client = new S3Client({\n    region: \"REGION\"\n  });\n  const params = {\n    /** input parameters */\n  };\n}\n\nexport { gets3Client, uploadTos3 };","map":{"version":3,"names":["S3Client","AbortMultipartUploadCommand","uploadParams","Bucket","Key","path","basename","file","Body","uploadVideo","videoUri","uploadTos3","s3Client","gets3Client","data","send","PutObjectCommand","console","log","err","client","region","params"],"sources":["/Users/mannysa/SAIL projects/tpat/src/utils/videoUploadUtils.js"],"sourcesContent":["// const express = require(\"express\");\n// const AWS = require(\"aws-sdk\");\n// const s3 = new AWS.S3({\n//   region: \"us-east-2\",\n// });\n// const { v4: uuidv4 } = require(\"uuid\");\n// const cors = require(\"cors\");\n\n// const app = express();\n\n// app.use(cors());\n\n// app.get(\"/get-signed-url\", async (req, res) => {\n//   await s3.createPresignedPost(\n//     {\n//       Fields: {\n//         key: uuidv4(),\n//       },\n//       Conditions: [\n//         [\"starts-with\", \"$Content-Type\", \"web3/\"],\n//         [\"content-length-range\", 0, 1000000],\n//       ],\n//       Expires: 30,\n//       Bucket: \"tpat\",\n//     },\n//     (err, signed) => {\n//       res.json(signed);\n//     }\n//   );\n// });\n\n// app.listen(8080);\n\nimport { S3Client, AbortMultipartUploadCommand } from \"@aws-sdk/client-s3\";\n// Set the parameters\nexport const uploadParams = {\n  Bucket: \"BUCKET_NAME\",\n  // Add the required 'Key' parameter using the 'path' module.\n  Key: path.basename(file),\n  // Add the required 'Body' parameter\n  Body: \"fileStream\",\n};\n\nfunction uploadVideo(videoUri) {}\n\nasync function uploadTos3() {\n  const s3Client = gets3Client();\n  try {\n    const data = await s3Client.send(new PutObjectCommand(uploadParams));\n    console.log(\"Success\", data);\n    return data; // For unit tests.\n  } catch (err) {\n    console.log(\"Error\", err);\n  }\n}\n\nfunction gets3Client() {\n  const client = new S3Client({ region: \"REGION\" });\n\n  const params = {\n    /** input parameters */\n  };\n}\n\nexport { gets3Client, uploadTos3 };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,QAAT,EAAmBC,2BAAnB,QAAsD,oBAAtD,C,CACA;;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,MAAM,EAAE,aADkB;EAE1B;EACAC,GAAG,EAAEC,IAAI,CAACC,QAAL,CAAcC,IAAd,CAHqB;EAI1B;EACAC,IAAI,EAAE;AALoB,CAArB;;AAQP,SAASC,WAAT,CAAqBC,QAArB,EAA+B,CAAE;;AAEjC,eAAeC,UAAf,GAA4B;EAC1B,MAAMC,QAAQ,GAAGC,WAAW,EAA5B;;EACA,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,CAAc,IAAIC,gBAAJ,CAAqBd,YAArB,CAAd,CAAnB;IACAe,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,IAAvB;IACA,OAAOA,IAAP,CAHE,CAGW;EACd,CAJD,CAIE,OAAOK,GAAP,EAAY;IACZF,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,GAArB;EACD;AACF;;AAED,SAASN,WAAT,GAAuB;EACrB,MAAMO,MAAM,GAAG,IAAIpB,QAAJ,CAAa;IAAEqB,MAAM,EAAE;EAAV,CAAb,CAAf;EAEA,MAAMC,MAAM,GAAG;IACb;EADa,CAAf;AAGD;;AAED,SAAST,WAAT,EAAsBF,UAAtB"},"metadata":{},"sourceType":"module"}