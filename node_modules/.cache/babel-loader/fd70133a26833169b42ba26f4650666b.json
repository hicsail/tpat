{"ast":null,"code":"var _jsxFileName = \"/Users/so._.may._.see._.macy/tpat/src/components/MainRecorder/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactMediaRecorder from \"./ReactMediaRecorder\";\nimport \"../\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mediaRecorderOptions = {\n  mimeType: \"video/webm;codecs=h264\"\n};\n\nfunction renderVideo(_ref) {\n  let {\n    status,\n    startRecording,\n    stopRecording,\n    mediaBlob\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      src: mediaBlob,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ReactMediaRecorder, {\n    video: true,\n    mediaRecorderOptions: mediaRecorderOptions,\n    render: renderVideo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","ReactMediaRecorder","mediaRecorderOptions","mimeType","renderVideo","status","startRecording","stopRecording","mediaBlob","App","rootElement","document","getElementById","render"],"sources":["/Users/so._.may._.see._.macy/tpat/src/components/MainRecorder/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactMediaRecorder from \"./ReactMediaRecorder\";\n\nimport \"../\";\n\nconst mediaRecorderOptions = {\n  mimeType: \"video/webm;codecs=h264\",\n};\n\nfunction renderVideo({ status, startRecording, stopRecording, mediaBlob }) {\n  return (\n    <div>\n      <p>{status}</p>\n      <button onClick={startRecording}>Start Recording</button>\n      <button onClick={stopRecording}>Stop Recording</button>\n      <video src={mediaBlob} controls />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <ReactMediaRecorder\n      video\n      mediaRecorderOptions={mediaRecorderOptions}\n      render={renderVideo}\n    />\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,OAAO,KAAP;;AAEA,MAAMC,oBAAoB,GAAG;EAC3BC,QAAQ,EAAE;AADiB,CAA7B;;AAIA,SAASC,WAAT,OAA2E;EAAA,IAAtD;IAAEC,MAAF;IAAUC,cAAV;IAA0BC,aAA1B;IAAyCC;EAAzC,CAAsD;EACzE,oBACE;IAAA,wBACE;MAAA,UAAIH;IAAJ;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEC,cAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEC,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAO,GAAG,EAAEC,SAAZ;MAAuB,QAAQ;IAA/B;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;AAED,SAASC,GAAT,GAAe;EACb,oBACE,QAAC,kBAAD;IACE,KAAK,MADP;IAEE,oBAAoB,EAAEP,oBAFxB;IAGE,MAAM,EAAEE;EAHV;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;KARQK,G;AAUT,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAZ,QAAQ,CAACa,MAAT,eAAgB,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QAAhB,EAAyBH,WAAzB"},"metadata":{},"sourceType":"module"}