{"ast":null,"code":"// compare\nvar spawn = require('cross-spawn');\n/**\n * Compare two images uses graphicsmagicks `compare` command.\n *\n * gm.compare(img1, img2, 0.4, function (err, equal, equality) {\n *   if (err) return handle(err);\n *   console.log('The images are equal: %s', equal);\n *   console.log('There equality was %d', equality);\n * });\n *\n * @param {String} orig Path to an image.\n * @param {String} compareTo Path to another image to compare to `orig`.\n * @param {Number|Object} [options] Options object or the amount of difference to tolerate before failing - defaults to 0.4\n * @param {Function} cb(err, Boolean, equality, rawOutput)\n */\n\n\nmodule.exports = exports = function (proto) {\n  function compare(orig, compareTo, options, cb) {\n    var isImageMagick = this._options && this._options.imageMagick;\n    var appPath = this._options && this._options.appPath || '';\n    var bin = isImageMagick ? appPath + 'compare' : appPath + 'gm';\n    var args = ['-metric', 'mse', orig, compareTo];\n\n    if (!isImageMagick) {\n      args.unshift('compare');\n    }\n\n    var tolerance = 0.4; // outputting the diff image\n\n    if (typeof options === 'object') {\n      if (options.highlightColor && options.highlightColor.indexOf('\"') < 0) {\n        options.highlightColor = '\"' + options.highlightColor + '\"';\n      }\n\n      if (options.file) {\n        if (typeof options.file !== 'string') {\n          throw new TypeError('The path for the diff output is invalid');\n        } // graphicsmagick defaults to red\n\n\n        if (options.highlightColor) {\n          args.push('-highlight-color');\n          args.push(options.highlightColor);\n        }\n\n        if (options.highlightStyle) {\n          args.push('-highlight-style');\n          args.push(options.highlightStyle);\n        } // For IM, filename is the last argument. For GM it's `-file <filename>`\n\n\n        if (!isImageMagick) {\n          args.push('-file');\n        }\n\n        args.push(options.file);\n      }\n\n      if (typeof options.tolerance != 'undefined') {\n        if (typeof options.tolerance !== 'number') {\n          throw new TypeError('The tolerance value should be a number');\n        }\n\n        tolerance = options.tolerance;\n      }\n    } else {\n      // For ImageMagick diff file is required but we don't care about it, so null it out\n      if (isImageMagick) {\n        args.push('null:');\n      }\n\n      if (typeof options == 'function') {\n        cb = options; // tolerance value not provided, flip the cb place\n      } else {\n        tolerance = options;\n      }\n    }\n\n    var proc = spawn(bin, args);\n    var stdout = '';\n    var stderr = '';\n    proc.stdout.on('data', function (data) {\n      stdout += data;\n    });\n    proc.stderr.on('data', function (data) {\n      stderr += data;\n    });\n    proc.on('close', function (code) {\n      // ImageMagick returns err code 2 if err, 0 if similar, 1 if dissimilar\n      if (isImageMagick) {\n        if (code === 0) {\n          return cb(null, 0 <= tolerance, 0, stdout);\n        } else if (code === 1) {\n          err = null;\n          stdout = stderr;\n        } else {\n          return cb(stderr);\n        }\n      } else {\n        if (code !== 0) {\n          return cb(stderr);\n        }\n      } // Since ImageMagick similar gives err code 0 and no stdout, there's really no matching\n      // Otherwise, output format for IM is `12.00 (0.123)` and for GM it's `Total: 0.123`\n\n\n      var regex = isImageMagick ? /\\((\\d+\\.?[\\d\\-\\+e]*)\\)/m : /Total: (\\d+\\.?\\d*)/m;\n      var match = regex.exec(stdout);\n\n      if (!match) {\n        err = new Error('Unable to parse output.\\nGot ' + stdout);\n        return cb(err);\n      }\n\n      var equality = parseFloat(match[1]);\n      cb(null, equality <= tolerance, equality, stdout, orig, compareTo);\n    });\n  }\n\n  if (proto) {\n    proto.compare = compare;\n  }\n\n  return compare;\n};","map":{"version":3,"names":["spawn","require","module","exports","proto","compare","orig","compareTo","options","cb","isImageMagick","_options","imageMagick","appPath","bin","args","unshift","tolerance","highlightColor","indexOf","file","TypeError","push","highlightStyle","proc","stdout","stderr","on","data","code","err","regex","match","exec","Error","equality","parseFloat"],"sources":["/Users/so._.may._.see._.macy/Desktop/tpat/node_modules/gm/lib/compare.js"],"sourcesContent":["// compare\n\nvar spawn = require('cross-spawn');\n\n/**\n * Compare two images uses graphicsmagicks `compare` command.\n *\n * gm.compare(img1, img2, 0.4, function (err, equal, equality) {\n *   if (err) return handle(err);\n *   console.log('The images are equal: %s', equal);\n *   console.log('There equality was %d', equality);\n * });\n *\n * @param {String} orig Path to an image.\n * @param {String} compareTo Path to another image to compare to `orig`.\n * @param {Number|Object} [options] Options object or the amount of difference to tolerate before failing - defaults to 0.4\n * @param {Function} cb(err, Boolean, equality, rawOutput)\n */\n\nmodule.exports = exports = function (proto) {\n  function compare(orig, compareTo, options, cb) {\n\n    var isImageMagick = this._options && this._options.imageMagick;\n    var appPath = this._options && this._options.appPath || '';\n    var bin = isImageMagick\n      ? appPath + 'compare' \n      : appPath + 'gm'\n    var args = ['-metric', 'mse', orig, compareTo]\n    if (!isImageMagick) {\n        args.unshift('compare');\n    }\n    var tolerance = 0.4;\n    // outputting the diff image\n    if (typeof options === 'object') {\n\n      if (options.highlightColor && options.highlightColor.indexOf('\"') < 0) {\n        options.highlightColor = '\"' + options.highlightColor + '\"';\n      }\n\n      if (options.file) {\n        if (typeof options.file !== 'string') {\n          throw new TypeError('The path for the diff output is invalid');\n        }\n         // graphicsmagick defaults to red\n        if (options.highlightColor) {\n            args.push('-highlight-color');\n            args.push(options.highlightColor);\n        }\n        if (options.highlightStyle) {\n            args.push('-highlight-style')\n            args.push(options.highlightStyle)\n        }\n        // For IM, filename is the last argument. For GM it's `-file <filename>`\n        if (!isImageMagick) {\n            args.push('-file');\n        }\n        args.push(options.file);\n      }\n      \n      if (typeof options.tolerance != 'undefined') {\n        if (typeof options.tolerance !== 'number') {\n          throw new TypeError('The tolerance value should be a number');\n        }\n        tolerance = options.tolerance;\n      } \n    } else {\n      // For ImageMagick diff file is required but we don't care about it, so null it out\n      if (isImageMagick) {\n        args.push('null:');\n      }\n\n      if (typeof options == 'function') {\n        cb = options; // tolerance value not provided, flip the cb place\n      } else {\n        tolerance = options\n      }\n    }\n\n    var proc = spawn(bin, args);\n    var stdout = '';\n    var stderr = '';\n    proc.stdout.on('data',function(data) { stdout+=data });\n    proc.stderr.on('data',function(data) { stderr+=data });\n    proc.on('close', function (code) {\n      // ImageMagick returns err code 2 if err, 0 if similar, 1 if dissimilar\n      if (isImageMagick) {\n        if (code === 0) {\n          return cb(null, 0 <= tolerance, 0, stdout);\n        }\n        else if (code === 1) {\n          err = null;\n          stdout = stderr;\n        } else {\n        return cb(stderr);\n        }\n      } else {\n        if(code !== 0) {\n          return cb(stderr);\n        }\n      }\n      // Since ImageMagick similar gives err code 0 and no stdout, there's really no matching\n      // Otherwise, output format for IM is `12.00 (0.123)` and for GM it's `Total: 0.123`\n      var regex = isImageMagick ? /\\((\\d+\\.?[\\d\\-\\+e]*)\\)/m : /Total: (\\d+\\.?\\d*)/m;\n      var match = regex.exec(stdout);\n      if (!match) {\n        err = new Error('Unable to parse output.\\nGot ' + stdout);\n        return cb(err);\n      }\n\n      var equality = parseFloat(match[1]);\n      cb(null, equality <= tolerance, equality, stdout, orig, compareTo);\n    });\n  }\n\n  if (proto) {\n    proto.compare = compare;\n  }\n  return compare;\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}