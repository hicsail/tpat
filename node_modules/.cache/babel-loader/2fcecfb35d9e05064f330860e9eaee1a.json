{"ast":null,"code":"/**\n*\n*\tA powerful watermark library\n*   based on ImageMagick for node.js\n*\n**/\n// System Imports\nvar fs = require('fs'),\n    im = require('imagemagick'),\n    path = require('path'),\n    ratify = require('node-ratify');\n\nvar defaultOptions = {\n  'text': 'Sample watermark',\n  'override-image': false,\n  'change-format': false,\n  'output-format': 'jpg',\n  'position': 'Center',\n  'color': 'rgba(0,0,0,0.4)',\n  'resize': '100%'\n}; //\n// Check if the alignment passed\n// is a valid alignment value\n//\n// Possible values of align are : dia1, dia2, ttb, btt, ltr, rtl\n//\n\nfunction _isValidAlignment(align) {\n  if (ratify.isEmpty(align)) return false; //\n  // dia1 : Diagonal 1\n  // dia2 : Diagonal 2\n  // ttb : top to bottom\n  // btt : bottom to top\n  // ltr : left to right\n  // rtl : right to left\n  //\n\n  if (['dia1', 'dia2', 'ttb', 'btt', 'ltr', 'rtl'].indexOf(align.toLowerCase()) > -1) return true;\n  return false;\n}\n\nfunction _parseOptions(imageData, source, options) {\n  var retObj = {};\n  var width = imageData.width;\n  var height = imageData.height;\n  var fillColor = options.color;\n  var watermarkText = options.text;\n  var align = _isValidAlignment(options.align) ? options.align.toLowerCase() : 'dia1';\n  var font = options.font;\n  var resize = options.resize ? options.resize : defaultOptions.resize;\n  var outputPath = options.dstPath ? options.dstPath : path.dirname(source) + '/watermark' + path.extname(source);\n  var position = null,\n      angle = null,\n      pointsize = null; // Check if fillColor is specified\n\n  if (ratify.isEmpty(fillColor)) fillColor = defaultOptions.color; // Check if watermark text is specified\n\n  if (ratify.isEmpty(watermarkText)) watermarkText = defaultOptions.text; // Check if position is specified\n\n  if (ratify.isEmpty(position)) position = defaultOptions.position; // Check if image needs to be overriden\n\n  if (options['override-image'] && ratify.isBoolean(options['override-image']) && options['override-image'].toString() === 'true') {\n    outputPath = source;\n  } // Check if output format needs to be changed\n\n\n  if (options['change-format'] && ratify.isBoolean(options['change-format']) && options['change-format'].toString() === 'true') {\n    var outputFormat = options['output-format'];\n    if (ratify.isEmpty(outputFormat) || outputFormat.length < 2) outputFormat = path.extname(source).substr(1);\n    outputPath = path.dirname(outputPath) + '/' + path.basename(outputPath, path.extname(outputPath)) + '.' + outputFormat;\n  } // Check if extension of output path is valid\n\n\n  if (outputPath) {\n    var ext = path.extname(outputPath).substr(1);\n    if (!ext || ext.length < 2) outputPath = path.dirname(outputPath) + '/' + path.basename(outputPath, path.extname(outputPath)) + path.extname(source);\n  }\n\n  var pointWidth = width,\n      pointHeight = height;\n\n  if (resize.toString().indexOf('%') == -1) {\n    resize = defaultOptions.resize;\n  } else {\n    var resizeFactor = parseFloat(resize) / 100;\n    pointWidth = width * resizeFactor;\n    pointHeight = height * resizeFactor;\n  }\n\n  switch (align) {\n    case 'ltr':\n      angle = 0;\n      pointsize = pointWidth / watermarkText.length;\n      break;\n\n    case 'rtl':\n      angle = 180;\n      pointsize = pointWidth / watermarkText.length;\n      break;\n\n    case 'ttb':\n      angle = 90;\n      pointsize = pointHeight / watermarkText.length;\n      break;\n\n    case 'btt':\n      angle = 270;\n      pointsize = pointHeight / watermarkText.length;\n      break;\n\n    case 'dia1':\n      angle = Math.atan(height / width) * (180 / Math.PI) * -1;\n      pointsize = Math.sqrt(pointWidth * pointWidth + pointHeight * pointHeight) / watermarkText.length;\n      break;\n\n    case 'dia2':\n      angle = Math.atan(height / width) * (180 / Math.PI);\n      var pointsize = Math.sqrt(pointWidth * pointWidth + pointHeight * pointHeight) / watermarkText.length;\n      break;\n\n    default:\n      angle = Math.atan(height / width) * (180 / Math.PI) * -1;\n      pointsize = Math.sqrt(pointWidth * pointWidth + pointHeight * pointHeight) / watermarkText.length;\n      break;\n  }\n\n  var args = [];\n  args.push(source); // original img path\n\n  args.push('-size');\n  args.push(width + 'x' + height);\n  args.push('-resize');\n  args.push(resize);\n\n  if (!ratify.isEmpty(font)) {\n    args.push('-font');\n    args.push(font);\n  }\n\n  args.push('-fill');\n  args.push(fillColor); // color of watermark text\n\n  args.push('-pointsize');\n  args.push(pointsize); // this needs to be calculated dynamically based on image size and length of copyright message\n\n  args.push('-gravity');\n  args.push(position); // alignment of watermark text.\n\n  args.push('-annotate');\n  args.push(angle); // angle of watermark message, with respect to X-axis\n\n  args.push(watermarkText); // copyright text\n\n  args.push(outputPath); // img with embedded watermark\n\n  retObj.args = args;\n  retObj.outputPath = outputPath;\n  return retObj;\n}\n\nfunction embedWatermark(source, options) {\n  if (!source || source == '') throw new Error('Image-Watermark::embedWatermark : Specified an invalid image source'); // Check if file exists at the specified path\n\n  stats = fs.lstatSync(source);\n  if (!stats.isFile()) throw new Error('Image-Watermark::embedWatermark : Image does not exists at : ' + source); // If options are not properly specified, use default options\n\n  if (!options || typeof options !== 'object') options = defaultOptions; // If we reach here that means file exists\n\n  im.identify(source, function (err, imageData) {\n    if (err) throw new Error('Image-Watermark::embedWatermark : Unable to process image file : ' + err);\n\n    var retObj = _parseOptions(imageData, source, options);\n\n    im.convert(retObj.args, function (err, stdout) {\n      if (err) console.log('Image-Watermark::embedWatermark : Error in applying watermark : ' + err);else console.log('Image-Watermark::embedWatermark : Successfully applied watermark. Please check it at :\\n ' + retObj.outputPath);\n    });\n  });\n}\n\nfunction embedWatermarkWithCb(source, options, callback) {\n  var error;\n\n  if (arguments.length < 2 || arguments.length === 2 && !ratify.isFunction(arguments[1]) || arguments.length > 2 && !ratify.isFunction(arguments[2])) {\n    throw new Error('Image-Watermark::embedWatermarkWithCb : Invalid arguments to method embedWatermarkWithCb');\n  } else if (arguments.length === 2 && ratify.isFunction(arguments[1])) {\n    callback = arguments[1];\n    options = null;\n  }\n\n  if (!source || source == '') {\n    error = new Error('Image-Watermark::embedWatermarkWithCb : Specified an invalid image source');\n    return callback(error);\n  } // Check if file exists at the specified path\n\n\n  fs.lstat(source, function (err, stats) {\n    if (err || !stats.isFile()) {\n      error = new Error('Image-Watermark::embedWatermarkWithCb : Image file doesn\\'t exists at ' + source);\n      return callback(error);\n    } else if (!err) {\n      // If options are not properly specified, use default options\n      if (!options || typeof options !== 'object') options = defaultOptions; // If we reach here that means file exists\n\n      im.identify(source, function (err, imageData) {\n        if (err) {\n          error = new Error('Image-Watermark::embedWatermarkWithCb : Unable to process image file : ' + err);\n          return callback(error);\n        }\n\n        var retObj = _parseOptions(imageData, source, options);\n\n        im.convert(retObj.args, function (err, stdout) {\n          if (err) {\n            error = new Error('Image-Watermark::embedWatermarkWithCb : Error in applying watermark : ' + err);\n            return callback(error);\n          } else {\n            console.log('Image-Watermark::embedWatermarkWithCb : Successfully applied watermark. Please check it at :\\n ' + retObj.outputPath);\n            return callback(null);\n          }\n        });\n      });\n    }\n  });\n  return;\n}\n\nexports = module.exports = {\n  embedWatermark: embedWatermark,\n  embedWatermarkWithCb: embedWatermarkWithCb,\n  version: JSON.parse(require('fs').readFileSync(__dirname + '/package.json', 'utf8')).version\n};","map":{"version":3,"names":["fs","require","im","path","ratify","defaultOptions","_isValidAlignment","align","isEmpty","indexOf","toLowerCase","_parseOptions","imageData","source","options","retObj","width","height","fillColor","color","watermarkText","text","font","resize","outputPath","dstPath","dirname","extname","position","angle","pointsize","isBoolean","toString","outputFormat","length","substr","basename","ext","pointWidth","pointHeight","resizeFactor","parseFloat","Math","atan","PI","sqrt","args","push","embedWatermark","Error","stats","lstatSync","isFile","identify","err","convert","stdout","console","log","embedWatermarkWithCb","callback","error","arguments","isFunction","lstat","exports","module","version","JSON","parse","readFileSync","__dirname"],"sources":["/Users/so._.may._.see._.macy/Desktop/tpat/node_modules/image-watermark/watermark.js"],"sourcesContent":["/**\n*\n*\tA powerful watermark library\n*   based on ImageMagick for node.js\n*\n**/\n\n// System Imports\nvar fs \t   = require('fs'),\n\tim     = require('imagemagick'),\n\tpath   = require('path'),\n\tratify = require('node-ratify');\n\nvar defaultOptions = {\n\t'text' \t\t\t\t    : 'Sample watermark',\n\t'override-image'\t: false,\n\t'change-format'\t\t: false,\n\t'output-format'\t\t: 'jpg',\n\t'position'\t\t\t  : 'Center',\n\t'color'\t\t\t\t    : 'rgba(0,0,0,0.4)',\n\t'resize' \t\t\t    : '100%'\n}\n\n//\n// Check if the alignment passed\n// is a valid alignment value\n//\n// Possible values of align are : dia1, dia2, ttb, btt, ltr, rtl\n//\nfunction _isValidAlignment(align) {\n\tif (ratify.isEmpty(align))\n\t\treturn false;\n\n\t//\n\t// dia1 : Diagonal 1\n\t// dia2 : Diagonal 2\n\t// ttb : top to bottom\n\t// btt : bottom to top\n\t// ltr : left to right\n\t// rtl : right to left\n\t//\n\tif (['dia1', 'dia2', 'ttb', 'btt', 'ltr', 'rtl'].indexOf(align.toLowerCase()) > -1)\n\t\treturn true;\n\n\treturn false;\n}\n\nfunction _parseOptions(imageData, source, options) {\n\n\tvar retObj = {};\n\n\tvar width = imageData.width;\n    var height = imageData.height;\n    var fillColor = options.color;\n    var watermarkText = options.text;\n    var align = _isValidAlignment(options.align) ? options.align.toLowerCase() : 'dia1';\n    var font = options.font;\n    var resize = options.resize ? options.resize : defaultOptions.resize;\n    var outputPath = options.dstPath ? options.dstPath : \n    \t\t\t\t path.dirname(source) + '/watermark' + path.extname(source);\n    var  position = null,\n    \t    angle = null,\n        pointsize = null;\n\n    // Check if fillColor is specified\n    if (ratify.isEmpty(fillColor))\n    \tfillColor = defaultOptions.color;\n\n    // Check if watermark text is specified\n    if (ratify.isEmpty(watermarkText))\n    \twatermarkText = defaultOptions.text;\n\n    // Check if position is specified\n    if (ratify.isEmpty(position))\n    \tposition = defaultOptions.position;\n\n  \t// Check if image needs to be overriden\n  \tif (options['override-image'] && ratify.isBoolean(options['override-image'])\n  \t\t&& options['override-image'].toString() === 'true') {\n  \t\toutputPath = source;\n  \t}\n\n  \t// Check if output format needs to be changed\n  \tif (options['change-format'] && ratify.isBoolean(options['change-format']) &&\n  \t\toptions['change-format'].toString() === 'true') {\n\n  \t\tvar outputFormat = options['output-format'];\n\n  \t\tif (ratify.isEmpty(outputFormat) || outputFormat.length < 2)\n  \t\t\toutputFormat = path.extname(source).substr(1);\n\n  \t\toutputPath = path.dirname(outputPath) + '/' + \n  \t\t\t\t\t path.basename(outputPath, path.extname(outputPath)) + \n  \t\t\t\t\t '.' + outputFormat;\n  \t}\n\n  \t// Check if extension of output path is valid\n  \tif (outputPath) {\n\n  \t\tvar ext = path.extname(outputPath).substr(1);\n\n  \t\tif (!ext || ext.length < 2)\n  \t\t\toutputPath = path.dirname(outputPath) + '/' + \n  \t\t\t\t\t\t path.basename(outputPath, path.extname(outputPath)) + \n  \t\t\t\t\t\t path.extname(source);\n  \t}\n\n  \tvar pointWidth = width,\n  \t\tpointHeight = height;\n\n  \tif (resize.toString().indexOf('%') == -1) {\n  \t\tresize = defaultOptions.resize;\n  \t} else {\n  \t\tvar resizeFactor = (parseFloat(resize) / 100);\n  \t\t\n  \t\tpointWidth = width * resizeFactor;\n  \t\tpointHeight = height * resizeFactor;\n  \t}\n\n  \tswitch(align) {\n  \t\tcase 'ltr'  :\n  \t\t\t\t\t\tangle = 0;\n  \t\t\t\t\t\tpointsize = (pointWidth / watermarkText.length);\n  \t\t\t\t\t\tbreak; \n  \t\tcase 'rtl'  : \n  \t\t\t\t\t\tangle = 180;\n  \t\t\t\t\t\tpointsize = (pointWidth / watermarkText.length);\n  \t\t\t\t\t\tbreak;\n  \t\tcase 'ttb'  :\n  \t\t\t\t\t\tangle = 90;\n  \t\t\t\t\t\tpointsize = (pointHeight / watermarkText.length);\n  \t\t\t\t\t\tbreak;\n  \t\tcase 'btt'  :\n  \t\t\t\t\t\tangle = 270;\n  \t\t\t\t\t\tpointsize = (pointHeight / watermarkText.length);\n  \t\t\t\t\t\tbreak;\n  \t\tcase 'dia1' :\n  \t\t\t\t\t\tangle = (Math.atan(height / width) * (180/Math.PI)) * -1;\n  \t\t\t\t\t\tpointsize = Math.sqrt(pointWidth * pointWidth + pointHeight * pointHeight) / watermarkText.length;\n  \t\t\t\t\t\tbreak;\n  \t\tcase 'dia2' :\n  \t\t\t\t\t\tangle = (Math.atan(height / width) * (180/Math.PI));\n  \t\t\t\t\t\tvar pointsize = Math.sqrt(pointWidth * pointWidth + pointHeight * pointHeight) / watermarkText.length;\n  \t\t\t\t\t\tbreak;\n  \t\tdefault     : \n              angle = (Math.atan(height / width) * (180/Math.PI)) * -1;\n              pointsize = Math.sqrt(pointWidth * pointWidth + pointHeight * pointHeight) / watermarkText.length;\n  \t\t\t\t\t\tbreak;\n  \t}\n\n    var args = [];\n    args.push(source); // original img path\n    args.push('-size');\n    args.push(width + 'x' + height);\n    args.push('-resize');\n    args.push(resize);\n    if (!ratify.isEmpty(font)) {\n    \targs.push('-font');\n    \targs.push(font);\n    }\n    args.push('-fill');\n    args.push(fillColor);  // color of watermark text\n    args.push('-pointsize');\n    args.push(pointsize); // this needs to be calculated dynamically based on image size and length of copyright message\n    args.push('-gravity');\n    args.push(position);    // alignment of watermark text.\n    args.push('-annotate');\n    args.push(angle);   // angle of watermark message, with respect to X-axis\n    args.push(watermarkText);  // copyright text\n    args.push(outputPath); // img with embedded watermark\n\n    retObj.args = args;\n    retObj.outputPath = outputPath;\n\n    return retObj;\n}\n\nfunction embedWatermark(source, options) {\n\n\tif (!source || source == '')\n\t\tthrow new Error('Image-Watermark::embedWatermark : Specified an invalid image source');\n\n\t// Check if file exists at the specified path\n\tstats = fs.lstatSync(source);\n\n\tif (!stats.isFile())\n\t\tthrow new Error('Image-Watermark::embedWatermark : Image does not exists at : ' + source);\t\t\n\n\t// If options are not properly specified, use default options\n\tif (!options || typeof options !== 'object')\n\t\toptions = defaultOptions;\n\n\t// If we reach here that means file exists\n\tim.identify(source, function (err, imageData) {\n\t  if (err)\n\t  \tthrow new Error('Image-Watermark::embedWatermark : Unable to process image file : ' + err);\n\n\t  var retObj = _parseOptions(imageData, source, options);\n\n\t  im.convert(retObj.args, function(err, stdout) {\n\t  \tif (err)\n\t    \tconsole.log('Image-Watermark::embedWatermark : Error in applying watermark : ' + err);\n\t    else \n\t      \tconsole.log('Image-Watermark::embedWatermark : Successfully applied watermark. Please check it at :\\n ' + retObj.outputPath);\n\t  });\n\t});\n}\n\nfunction embedWatermarkWithCb(source, options, callback) {\n\n\tvar error;\n\t\n\tif ((arguments.length < 2) ||\n\t\t(arguments.length === 2 && !ratify.isFunction(arguments[1])) ||\n\t\t(arguments.length > 2 && !ratify.isFunction(arguments[2]))) {\n\t\tthrow new Error('Image-Watermark::embedWatermarkWithCb : Invalid arguments to method embedWatermarkWithCb');\n\t} else if (arguments.length === 2 && ratify.isFunction(arguments[1])) {\n\t\tcallback = arguments[1];\n\t\toptions = null;\n\t}\n\n\tif (!source || source == '') {\n\t\terror = new Error('Image-Watermark::embedWatermarkWithCb : Specified an invalid image source');\n\t\treturn callback(error);\n\t}\n\n\t// Check if file exists at the specified path\n\tfs.lstat(source, function(err, stats) {\n\t\tif (err || !stats.isFile()) {\n\t\t\terror = new Error('Image-Watermark::embedWatermarkWithCb : Image file doesn\\'t exists at ' + source);\n\t\t\treturn callback(error);\n\t\t} else if (!err) {\n\n\t\t\t// If options are not properly specified, use default options\n\t\t\tif (!options || typeof options !== 'object')\n\t\t\t\toptions = defaultOptions;\n\n\t\t\t// If we reach here that means file exists\n\t\t\tim.identify(source, function (err, imageData) {\n\t\t\t\tif (err) {\n\t\t\t  \t\terror = new Error('Image-Watermark::embedWatermarkWithCb : Unable to process image file : ' + err);\n\t\t\t  \t\treturn callback(error);\n\t\t\t  \t}\n\n\t\t\t  \tvar retObj = _parseOptions(imageData, source, options);\n\n\t\t        im.convert(retObj.args, function(err, stdout) {\n\t\t            if (err) {\n\t\t            \terror = new Error('Image-Watermark::embedWatermarkWithCb : Error in applying watermark : ' + err);\n\t\t            \treturn callback(error);\n\t\t            } else {\n\t\t            \tconsole.log('Image-Watermark::embedWatermarkWithCb : Successfully applied watermark. Please check it at :\\n ' + retObj.outputPath);\n\t\t            \treturn callback(null);\n\t\t            }\n\t\t        });\n\t\t\t});\n\t\t}\n\t});\n\t\n\treturn;\n}\n\n\nexports = module.exports = {\n\tembedWatermark \t\t    : embedWatermark,\n\tembedWatermarkWithCb  : embedWatermarkWithCb,\n\tversion\t\t   \t\t      : JSON.parse(\n  \t\t\t\t\t\t\t           require('fs').readFileSync(__dirname + '/package.json', 'utf8')\n\t\t\t\t\t \t               ).version\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}