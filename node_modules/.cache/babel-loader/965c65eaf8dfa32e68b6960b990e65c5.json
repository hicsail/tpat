{"ast":null,"code":"var _jsxFileName = \"/Users/mannysa/SAIL projects/tpat/src/pages/tutorial2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport CountDownTimer from \"../components/Timer\";\nimport { useRecordWebcam, CAMERA_STATUS } from \"react-record-webcam\";\nimport { useNavigate } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport { uploadTos3 } from \"../utils/videoUploadUtils\";\nimport { UserContext } from \"../store/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst OPTIONS = {\n  filename: \"video\",\n  fileType: \"webm\",\n  codec: {\n    audio: \"aac\" | \"opus\",\n    video: \"av1\" | \"avc\" | \"vp8\"\n  },\n  width: 1920,\n  height: 1080\n};\n\nfunction Tutorial2() {\n  _s();\n\n  const hoursMinSecs = {\n    minutes: 7,\n    seconds: 2\n  };\n  const [isRecord, setRecord] = useState(false);\n  const recordWebcam = useRecordWebcam(OPTIONS);\n  const {\n    user\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  useEffect(() => {\n    // opening the camera\n    setTimeout(() => {\n      if (recordWebcam.status === CAMERA_STATUS.CLOSED) {\n        recordWebcam.open();\n      } //1 second = 1000 millisecond\n\n    }, 1000); // page timer itself, navigate back at 7 mins 5 seconds when camera is recording\n\n    setTimeout(() => {\n      navigate(\"/\"); //1 second = 1000 millisecond\n    }, 425000); // video timer itself, stops at 7 mins\n\n    if (recordWebcam.status === CAMERA_STATUS.RECORDING) {\n      setTimeout(() => {\n        recordWebcam.stop(); //recordWebcam.getRecording();\n        //1 second = 1000 millisecond\n      }, 421000);\n    }\n\n    if (recordWebcam.status === CAMERA_STATUS.PREVIEW) {\n      setTimeout(() => {\n        navigate(\"/\"); //1 second = 1000 millisecond\n      }, 1000);\n      recordWebcam.close(); // recordWebcam.download();\n\n      uploadTask(recordWebcam);\n    }\n  });\n\n  async function uploadTask(recordWebcam) {\n    const blob = await recordWebcam.getRecording();\n    const metadata = {\n      name: user.name,\n      email: user.email,\n      taskId: \"1.1\"\n    };\n    uploadTos3(blob, metadata);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"5%\",\n      paddingTop: \"3%\",\n      marginRight: \"5%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"instructionBtn\",\n      onClick: toggleModal,\n      children: \"Click to see Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onRequestClose: toggleModal,\n      contentLabel: \"My dialog\",\n      className: \"mymodal\",\n      overlayClassName: \"myoverlay\",\n      closeTimeoutMS: 500,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Timer on the task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your camera will automatically start and open when you get onto the page / auto-directed to the page. Once you are on the page, your camera will automatically open, and start recording shortly after. You will also be able to see the timer starting to count down. The video will stop after the task timer/timer runs out, but you are also able to stop recording once you are finished. The video will automatically download to your local computer, and redirect you back to the homepage.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"closerBtn\",\n        onClick: toggleModal,\n        children: \"Close modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Camera status: \", recordWebcam.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), recordWebcam.status === CAMERA_STATUS.RECORDING ? /*#__PURE__*/_jsxDEV(CountDownTimer, {\n      hoursMinSecs: hoursMinSecs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Time Limit: 7 minutes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"webcam\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: recordWebcam.status === CAMERA_STATUS.OPEN || recordWebcam.status === CAMERA_STATUS.RECORDING || recordWebcam.status === CAMERA_STATUS.PREVIEW,\n        onClick: recordWebcam.open,\n        children: \"Open camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: recordWebcam.status === CAMERA_STATUS.CLOSED || recordWebcam.status === CAMERA_STATUS.RECORDING || recordWebcam.status === CAMERA_STATUS.PREVIEW,\n        onClick: () => {\n          recordWebcam.start();\n          setRecord(!isRecord);\n        },\n        children: \"Start recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: recordWebcam.status !== CAMERA_STATUS.RECORDING,\n        onClick: () => {\n          recordWebcam.stop();\n          setRecord(!isRecord);\n        },\n        children: \"Stop recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: recordWebcam.webcamRef,\n      style: {\n        display: `${recordWebcam.status === CAMERA_STATUS.OPEN || recordWebcam.status === CAMERA_STATUS.RECORDING ? \"block\" : \"none\"}`\n      },\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: recordWebcam.previewRef,\n      style: {\n        display: `${recordWebcam.status === CAMERA_STATUS.PREVIEW ? \"block\" : \"none\"}`\n      },\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tutorial2, \"S4iUlkh51NkJLJCzcV67c5ML0nI=\", false, function () {\n  return [useRecordWebcam, useNavigate];\n});\n\n_c = Tutorial2;\nexport default Tutorial2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial2\");","map":{"version":3,"names":["React","useState","useEffect","useContext","CountDownTimer","useRecordWebcam","CAMERA_STATUS","useNavigate","Modal","uploadTos3","UserContext","setAppElement","OPTIONS","filename","fileType","codec","audio","video","width","height","Tutorial2","hoursMinSecs","minutes","seconds","isRecord","setRecord","recordWebcam","user","navigate","isOpen","setIsOpen","toggleModal","setTimeout","status","CLOSED","open","RECORDING","stop","PREVIEW","close","uploadTask","blob","getRecording","metadata","name","email","taskId","marginLeft","paddingTop","marginRight","OPEN","start","webcamRef","display","previewRef"],"sources":["/Users/mannysa/SAIL projects/tpat/src/pages/tutorial2.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport CountDownTimer from \"../components/Timer\";\nimport { useRecordWebcam, CAMERA_STATUS } from \"react-record-webcam\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Modal from \"react-modal\";\nimport { uploadTos3 } from \"../utils/videoUploadUtils\";\nimport { UserContext } from \"../store/UserContext\";\n\nModal.setAppElement(\"#root\");\n\nconst OPTIONS = {\n  filename: \"video\",\n  fileType: \"webm\",\n  codec: { audio: \"aac\" | \"opus\", video: \"av1\" | \"avc\" | \"vp8\" },\n  width: 1920,\n  height: 1080,\n};\n\nfunction Tutorial2() {\n  const hoursMinSecs = { minutes: 7, seconds: 2 };\n  const [isRecord, setRecord] = useState(false);\n  const recordWebcam = useRecordWebcam(OPTIONS);\n  const { user } = useContext(UserContext);\n\n  const navigate = useNavigate();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  useEffect(() => {\n    // opening the camera\n    setTimeout(() => {\n      if (recordWebcam.status === CAMERA_STATUS.CLOSED) {\n        recordWebcam.open();\n      }\n      //1 second = 1000 millisecond\n    }, 1000);\n\n    // page timer itself, navigate back at 7 mins 5 seconds when camera is recording\n    setTimeout(() => {\n      navigate(\"/\");\n      //1 second = 1000 millisecond\n    }, 425000);\n\n    // video timer itself, stops at 7 mins\n    if (recordWebcam.status === CAMERA_STATUS.RECORDING) {\n      setTimeout(() => {\n        recordWebcam.stop();\n        //recordWebcam.getRecording();\n        //1 second = 1000 millisecond\n      }, 421000);\n    }\n    if (recordWebcam.status === CAMERA_STATUS.PREVIEW) {\n      setTimeout(() => {\n        navigate(\"/\");\n        //1 second = 1000 millisecond\n      }, 1000);\n      recordWebcam.close();\n      // recordWebcam.download();\n\n      uploadTask(recordWebcam);\n    }\n  });\n\n  async function uploadTask(recordWebcam) {\n    const blob = await recordWebcam.getRecording();\n    const metadata = {\n      name: user.name,\n      email: user.email,\n      taskId: \"1.1\",\n    };\n    uploadTos3(blob, metadata);\n  }\n\n  return (\n    <div style={{ marginLeft: \"5%\", paddingTop: \"3%\", marginRight: \"5%\" }}>\n      <button class=\"instructionBtn\" onClick={toggleModal}>\n        Click to see Instructions\n      </button>\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n        className=\"mymodal\"\n        overlayClassName=\"myoverlay\"\n        closeTimeoutMS={500}\n      >\n        <div>\n          <h2>Timer on the task</h2>\n          <p>\n            Your camera will automatically start and open when you get onto the\n            page / auto-directed to the page. Once you are on the page, your\n            camera will automatically open, and start recording shortly after.\n            You will also be able to see the timer starting to count down. The\n            video will stop after the task timer/timer runs out, but you are\n            also able to stop recording once you are finished. The video will\n            automatically download to your local computer, and redirect you back\n            to the homepage.\n          </p>\n        </div>\n        <button class=\"closerBtn\" onClick={toggleModal}>\n          Close modal\n        </button>\n      </Modal>\n      <p>Camera status: {recordWebcam.status}</p>\n      {recordWebcam.status === CAMERA_STATUS.RECORDING ? (\n        <CountDownTimer hoursMinSecs={hoursMinSecs} />\n      ) : (\n        <p>Time Limit: 7 minutes</p>\n      )}\n\n      <div class=\"webcam\">\n        <button\n          disabled={\n            recordWebcam.status === CAMERA_STATUS.OPEN ||\n            recordWebcam.status === CAMERA_STATUS.RECORDING ||\n            recordWebcam.status === CAMERA_STATUS.PREVIEW\n          }\n          onClick={recordWebcam.open}\n        >\n          Open camera\n        </button>\n        <button\n          disabled={\n            recordWebcam.status === CAMERA_STATUS.CLOSED ||\n            recordWebcam.status === CAMERA_STATUS.RECORDING ||\n            recordWebcam.status === CAMERA_STATUS.PREVIEW\n          }\n          onClick={() => {\n            recordWebcam.start();\n            setRecord(!isRecord);\n          }}\n        >\n          Start recording\n        </button>\n        <button\n          disabled={recordWebcam.status !== CAMERA_STATUS.RECORDING}\n          onClick={() => {\n            recordWebcam.stop();\n            setRecord(!isRecord);\n          }}\n        >\n          Stop recording\n        </button>\n      </div>\n      <video\n        ref={recordWebcam.webcamRef}\n        style={{\n          display: `${\n            recordWebcam.status === CAMERA_STATUS.OPEN ||\n            recordWebcam.status === CAMERA_STATUS.RECORDING\n              ? \"block\"\n              : \"none\"\n          }`,\n        }}\n        autoPlay\n        muted\n      />\n      <video\n        ref={recordWebcam.previewRef}\n        style={{\n          display: `${\n            recordWebcam.status === CAMERA_STATUS.PREVIEW ? \"block\" : \"none\"\n          }`,\n        }}\n        controls\n      />\n    </div>\n  );\n}\n\nexport default Tutorial2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}