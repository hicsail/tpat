{"ast":null,"code":"var _jsxFileName = \"/Users/so._.may._.see._.macy/tpat/src/components/MainRecorder/MainRecorder.tsx\",\n    _s = $RefreshSig$();\n\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecordView = () => {\n  _s();\n\n  const {\n    status,\n    startRecording,\n    stopRecording,\n    mediaBlobUrl\n  } = useReactMediaRecorder({\n    video: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      src: mediaBlobUrl,\n      controls: true,\n      autoPlay: true,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecordView, \"z8rRmnqMpYBQ+K84PROGD8hSlVo=\", false, function () {\n  return [useReactMediaRecorder];\n});\n\n_c = RecordView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordView\");","map":{"version":3,"names":["useReactMediaRecorder","RecordView","status","startRecording","stopRecording","mediaBlobUrl","video"],"sources":["/Users/so._.may._.see._.macy/tpat/src/components/MainRecorder/MainRecorder.tsx"],"sourcesContent":["import { useReactMediaRecorder } from \"react-media-recorder\";\n\nconst RecordView = () => {\n  const { status, startRecording, stopRecording, mediaBlobUrl } =\n    useReactMediaRecorder({ video: true });\n\n  return (\n    <div>\n      <p>{status}</p>\n      <button onClick={startRecording}>Start Recording</button>\n      <button onClick={stopRecording}>Stop Recording</button>\n      <video src={mediaBlobUrl} controls autoPlay loop />\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,qBAAT,QAAsC,sBAAtC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM;IAAEC,MAAF;IAAUC,cAAV;IAA0BC,aAA1B;IAAyCC;EAAzC,IACJL,qBAAqB,CAAC;IAAEM,KAAK,EAAE;EAAT,CAAD,CADvB;EAGA,oBACE;IAAA,wBACE;MAAA,UAAIJ;IAAJ;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEC,cAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEC,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAO,GAAG,EAAEC,YAAZ;MAA0B,QAAQ,MAAlC;MAAmC,QAAQ,MAA3C;MAA4C,IAAI;IAAhD;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAZD;;GAAMJ,U;UAEFD,qB;;;KAFEC,U"},"metadata":{},"sourceType":"module"}