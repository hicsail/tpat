{"ast":null,"code":"import { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\nconst TPAT_VIDEOS_BUCKET = \"tpatvideos\";\n/**\n * @param videoBlob \n * @param metadata  example metadata =   {\n        username: \"Teacher 1\",\n        email: \"teacher@gmail.com\",\n        taskId: \"1\",\n      },\n * @returns \n */\n\nasync function uploadTos3(videoBlob, metadata) {\n  const s3Client = gets3Client();\n\n  try {\n    const uploadParams = {\n      Bucket: TPAT_VIDEOS_BUCKET,\n      Body: videoBlob,\n      //key format : Timestamp + username + taskId. aids sorting in aws\n      Key: Date.now() + metadata.username.trim() + \"task\" + metadata.taskId + \".webm\",\n      Metadata: metadata\n    };\n    const data = await s3Client.send(new PutObjectCommand(uploadParams));\n    console.log(\"Success\", data);\n    return data;\n  } catch (err) {\n    console.log(\"Error sfsd\", err);\n  }\n}\n\nfunction gets3Client() {\n  const client = new S3Client({\n    region: \"us-east-2\",\n    credentials: {\n      accessKeyId: \"AKIAR4AR4PW6KXERGY7I\",\n      secretAccessKey: \"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\"\n    }\n  });\n  return client;\n}\n\nexport { gets3Client, uploadTos3 };","map":{"version":3,"names":["S3Client","PutObjectCommand","TPAT_VIDEOS_BUCKET","uploadTos3","videoBlob","metadata","s3Client","gets3Client","uploadParams","Bucket","Body","Key","Date","now","username","trim","taskId","Metadata","data","send","console","log","err","client","region","credentials","accessKeyId","secretAccessKey"],"sources":["/Users/mannysa/SAIL projects/tpat/src/utils/videoUploadUtils.js"],"sourcesContent":["import { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\n\nconst TPAT_VIDEOS_BUCKET = \"tpatvideos\";\n\n/**\n * @param videoBlob \n * @param metadata  example metadata =   {\n        username: \"Teacher 1\",\n        email: \"teacher@gmail.com\",\n        taskId: \"1\",\n      },\n * @returns \n */\nasync function uploadTos3(videoBlob, metadata) {\n  const s3Client = gets3Client();\n  try {\n    const uploadParams = {\n      Bucket: TPAT_VIDEOS_BUCKET,\n      Body: videoBlob,\n      //key format : Timestamp + username + taskId. aids sorting in aws\n      Key:\n        Date.now() +\n        metadata.username.trim() +\n        \"task\" +\n        metadata.taskId +\n        \".webm\",\n      Metadata: metadata,\n    };\n    const data = await s3Client.send(new PutObjectCommand(uploadParams));\n    console.log(\"Success\", data);\n    return data;\n  } catch (err) {\n    console.log(\"Error sfsd\", err);\n  }\n}\n\nfunction gets3Client() {\n  const client = new S3Client({\n    region: \"us-east-2\",\n    credentials: {\n      accessKeyId: \"AKIAR4AR4PW6KXERGY7I\",\n      secretAccessKey: \"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\",\n    },\n  });\n\n  return client;\n}\n\nexport { gets3Client, uploadTos3 };\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,gBAAnB,QAA2C,oBAA3C;AAEA,MAAMC,kBAAkB,GAAG,YAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeC,UAAf,CAA0BC,SAA1B,EAAqCC,QAArC,EAA+C;EAC7C,MAAMC,QAAQ,GAAGC,WAAW,EAA5B;;EACA,IAAI;IACF,MAAMC,YAAY,GAAG;MACnBC,MAAM,EAAEP,kBADW;MAEnBQ,IAAI,EAAEN,SAFa;MAGnB;MACAO,GAAG,EACDC,IAAI,CAACC,GAAL,KACAR,QAAQ,CAACS,QAAT,CAAkBC,IAAlB,EADA,GAEA,MAFA,GAGAV,QAAQ,CAACW,MAHT,GAIA,OATiB;MAUnBC,QAAQ,EAAEZ;IAVS,CAArB;IAYA,MAAMa,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAT,CAAc,IAAIlB,gBAAJ,CAAqBO,YAArB,CAAd,CAAnB;IACAY,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;IACA,OAAOA,IAAP;EACD,CAhBD,CAgBE,OAAOI,GAAP,EAAY;IACZF,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,GAA1B;EACD;AACF;;AAED,SAASf,WAAT,GAAuB;EACrB,MAAMgB,MAAM,GAAG,IAAIvB,QAAJ,CAAa;IAC1BwB,MAAM,EAAE,WADkB;IAE1BC,WAAW,EAAE;MACXC,WAAW,EAAE,sBADF;MAEXC,eAAe,EAAE;IAFN;EAFa,CAAb,CAAf;EAQA,OAAOJ,MAAP;AACD;;AAED,SAAShB,WAAT,EAAsBJ,UAAtB"},"metadata":{},"sourceType":"module"}