{"ast":null,"code":"var _jsxFileName = \"/Users/so._.may._.see._.macy/tpat/src/components/MainRecorder/MainRecorder.tsx\";\nimport { ReactMediaRecorder } from \"react-media-recorder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(ReactMediaRecorder, {\n    video: true,\n    render: _ref => {\n      let {\n        status,\n        startRecording,\n        stopRecording,\n        mediaBlobUrl\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRecording,\n          children: \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopRecording,\n          children: \"Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          src: mediaBlobUrl,\n          controls: true,\n          autoPlay: true,\n          loop: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ReactMediaRecorder","App","status","startRecording","stopRecording","mediaBlobUrl"],"sources":["/Users/so._.may._.see._.macy/tpat/src/components/MainRecorder/MainRecorder.tsx"],"sourcesContent":["import { ReactMediaRecorder } from \"react-media-recorder\";\n\nconst App = () => (\n  <div>\n    <ReactMediaRecorder\n      video\n      render={({ status, startRecording, stopRecording, mediaBlobUrl }) => (\n        <div>\n          <p>{status}</p>\n          <button onClick={startRecording}>Start Recording</button>\n          <button onClick={stopRecording}>Stop Recording</button>\n          <video src={mediaBlobUrl} controls autoPlay loop />\n        </div>\n      )}\n    />\n  </div>\n);\n\nexport default App;\n"],"mappings":";AAAA,SAASA,kBAAT,QAAmC,sBAAnC;;;AAEA,MAAMC,GAAG,GAAG,mBACV;EAAA,uBACE,QAAC,kBAAD;IACE,KAAK,MADP;IAEE,MAAM,EAAE;MAAA,IAAC;QAAEC,MAAF;QAAUC,cAAV;QAA0BC,aAA1B;QAAyCC;MAAzC,CAAD;MAAA,oBACN;QAAA,wBACE;UAAA,UAAIH;QAAJ;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,OAAO,EAAEC,cAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAQ,OAAO,EAAEC,aAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAO,GAAG,EAAEC,YAAZ;UAA0B,QAAQ,MAAlC;UAAmC,QAAQ,MAA3C;UAA4C,IAAI;QAAhD;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QADM;IAAA;EAFV;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF;;KAAMJ,G;AAgBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}